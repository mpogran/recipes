window.recipes = angular.module 'recipes', ['ui.router', 'ngResource', 'ng-rails-csrf']

recipes.config ['$resourceProvider', '$locationProvider', ($resourceProvider, $locationProvider) ->
  $resourceProvider.defaults.stripTrailingSlashes = false
  $locationProvider.html5Mode
    enabled: true
]

recipes.factory 'Container', ['$resource', ($resource) ->
  return $resource '/containers/:id.json', null,
    'update': { method:'PUT' }
]

recipes.factory 'Recipe', ['$resource', ($resource) ->
  return $resource '/recipes/:id.json', null,
    'update': { method:'PUT' }
]

recipes.config ($stateProvider, $urlRouterProvider) ->
  $stateProvider
    .state 'root',
      url: '/',
      controller: 'BrowserCtrl'
      views:
        list:
          templateUrl: 'assets/browser/list.html',

    .state 'recipe-new',
      controller: 'BrowserCtrl'
      views:
        list:
          templateUrl: 'assets/browser/list.html',
        preview:
          templateUrl: 'assets/browser/new_recipe.html',
  return

recipes.controller 'BrowserCtrl', ['$scope','$state', 'Container', 'Recipe', 'container',
  ($scope, $state, Container, Recipe, container) ->
    $scope.rootContainer = $scope.container = JSON.parse(container)
    $scope.items = $scope.container.items

    $scope.refreshContainer = ->
      $scope.container = Container
        .get {id: $scope.container.id},
          (container) ->
            $scope.items = $scope.container.items
            return
      return


    $scope.newRecipe = ->
      $scope.recipe = new Recipe()
      $state.go('recipe-new')
      return

    $scope.saveRecipe = ->
      $scope.items = []
      $scope.recipe
        .$save {container_id: $scope.container.id},
          (recipe) ->
            $scope.recipe = null
            $scope.refreshContainer()
            $state.go('root')
            return
      return
]
