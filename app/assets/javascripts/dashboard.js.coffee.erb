window.recipes = angular.module 'recipes', ['ui.router', 'ngResource', 'ng-rails-csrf']

recipes.filter 'location', ['$sce', ($sce) ->
  return (input) ->
    if input.type == 'website'
      urlMatch = /w{3}.([^\/]*)/g
      match = urlMatch.exec(input.location.url)
      url = match[0]
      return $sce.trustAsHtml("<a href=#{input.location.url}>#{url}</a>")
    else if input.type == 'book'
      return "#{input.location.page}, #{input.location.edition} edition"
    else
      return "#{input.location.page}, #{input.location.issue} edition"
]

recipes.filter 'html', ['$sce', ($sce) ->
  return (input) ->
    return $sce.trustAsHtml(input)
]

recipes.config ['$resourceProvider', '$locationProvider', ($resourceProvider, $locationProvider) ->
  $resourceProvider.defaults.stripTrailingSlashes = false
  $locationProvider.html5Mode
    enabled: true
]

recipes.factory 'Container', ['$resource', ($resource) ->
  return $resource '/containers/:id.json', null,
    'update': { method:'PUT' }
]

recipes.factory 'Recipe', ['$resource', ($resource) ->
  return $resource '/recipes/:id.json', null,
    'update': { method:'PUT' }
]

recipes.config ($stateProvider, $urlRouterProvider) ->
  $stateProvider
    .state 'root',
      url: '/',
      controller: 'BrowserCtrl',
      views:
        list:
          templateUrl: 'assets/browser/list.html',

    .state 'recipe-show',
      controller: 'BrowserCtrl',
      views:
        list:
          templateUrl: 'assets/browser/list.html',
        preview:
          templateUrl: 'assets/browser/recipes/show.html'

    .state 'recipe-new',
      controller: 'BrowserCtrl',
      views:
        list:
          templateUrl: 'assets/browser/list.html',
        preview:
          templateUrl: 'assets/browser/recipes/new.html'
  return

recipes.controller 'BrowserCtrl', ['$scope','$state', 'Container', 'Recipe', 'container',
  ($scope, $state, Container, Recipe, container) ->
    $scope.locations = ['website', 'book', 'magazine', 'other']
    $scope.rootContainer = $scope.container = JSON.parse(container)
    $scope.items = $scope.container.items

    $scope.refreshContainer = ->
      $scope.container = Container
        .get {id: $scope.container.id},
          (container) ->
            $scope.items = $scope.container.items
            return
      return

    $scope.loadItem = (item) ->
      if item.itemable_type == 'recipe'
        $scope.recipe = Recipe.get {id: item.itemable_id}
        for list_item in $scope.items
          list_item.state = null
        item.state = 'cur'

        $state.go('recipe-show')
      return

    $scope.newRecipe = ->
      $scope.recipe = new Recipe()
      $state.go('recipe-new')
      return

    $scope.saveRecipe = ->
      $scope.items = []
      $scope.recipe
        .$save {container_id: $scope.container.id},
          (recipe) ->
            $scope.recipe = recipe
            $scope.refreshContainer()
            $state.go('root')
            return
      return
]
